swagger: "2.0"
info:
  description: ZWF backend API
  version: "1.0.0"
  title: "ZWF API"
basePath: "/api/v1"
schemes:
  - http
  - https
definitions:
  PingResponse:
    type: "object"
paths:
  /notification:
    get:
      operationId: getMyNotificationMessages
      responses:
        200:
          description: OK
    post:
      operationId: reactOnNotificationMessage
      responses:
        200:
          description: OK
  /support:
    get:
      operationId: getMySupport
      responses:
        200:
          description: OK
    post:
      operationId: createSupportMessage
      responses:
        200:
          description: OK
  /support/nudge:
    post:
      operationId: nudgeMyLastReadSupportMessage
      responses:
        200:
          description: OK
  /support/search:
    post:
      operationId: searchSupportList
      responses:
        200:
          description: OK
  /support/{userId}:
    get:
      operationId: getUserSupport
      parameters:
        - name: userId
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /zevent:
    get:
      operationId: establishZeventStream
      responses:
        200:
          description: OK          
  /file/meta:
    post:
      operationId: searchFileMetaList
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /file/{id}:
    get:
      operationId: getFileMeta
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /file/{id}/data:
    get:
      operationId: getPrivateFileStream
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /file/public/{id}/data:
    get:
      operationId: getPublicFileStream
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /file:
    post:
      operationId: uploadPublicFile
      responses:
        200:
          description: OK
  /contact:
    post:
      operationId: submitContact
      responses:
        200:
          description: OK          
  /auth/federalLogin:
    get:
      operationId: federalLogin
      responses:
        200:
          description: OK          
    post:
      operationId: federalLogin
      responses:
        200:
          description: OK              
  /auth/login:
    post:
      operationId: login
      # security:
      # - authAnyRole: []
      #   - business: []
      #   - individual: []
      #   - admin: []
      responses:
        200:
          description: OK
  /auth/logout:
    post:
      operationId: logout
      # security:
      #   - authAnyRole: []
      # security:
      #   - business: []
      #   - individual: []
      #   - admin: []
      responses:
        200:
          description: OK
  /auth/forgot_password:
    post:
      operationId: forgotPassword
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK
  /auth/impersonate:
    post:
      operationId: impersonate
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK
  /auth/unimpersonate:
    post:
      operationId: unimpersonate
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK          
  /auth/invite/member:
    post:
      operationId: inviteOrgMember
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK
  /auth/reinvite/member:
    post:
      operationId: reinviteOrgMember
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK          
  /auth/invite/client:
    post:
      operationId: inviteClientToOrg
      # security:
      #   - authAnyRole: []
      responses:
        200:
          description: OK
  /auth/set_password:
    post:
      operationId: resetPassword
      responses:
        200:
          description: OK
  /auth/r/{token}:
    get:
      operationId: retrievePassword
      parameters:
        - name: token
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /auth/signup/org:
    post:
      operationId: signUpOrg
      responses:
        200:
          description: OK
  /auth/user:
    get:
      operationId: getAuthUser
      responses:
        200:
          description: OK
  /auth/register/google:
    post:
      operationId: ssoGoogleRegisterOrg
      responses:
        200:
          description: OK
  /auth/login/google:
    post:
      operationId: ssoGoogleLogin
      responses:
        200:
          description: OK          
  /user/:id:
    delete:
      operationId: deleteUser
      # security:
      #   - authAdminOrAgent: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /user/:id/profile:
    post:
      operationId: saveProfile
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /user/brief:
    post:
      operationId: getBulkUserBrief
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /user/:id/set_password:
    post:
      operationId: setUserPassword
      # security:
      #   - authAdminOrAgent: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /user/agent:
    get:
      operationId: listAgents
      # security:
      #   - authAdminOrAgent: []
      responses:
        200:
          description: OK
  /user/change_password:
    post:
      operationId: changePassword
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /user/:id/tags:
    post:
      operationId: setUserTags
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /user/:id/role:
    post:
      operationId: setUserRole
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /org:
    get:
      operationId: getMyOrgProfile
      responses:
        200:
          description: OK
    put:
      operationId: createMyOrg
      responses:
        200:
          description: OK
    post:
      operationId: saveOrgProfile
      responses:
        200:
          description: OK
  /org/member:
    get:
      operationId: listOrgMembers
      responses:
        200:
          description: OK
  /org/client:
    post:
      operationId: searchOrgClientUserList
      responses:
        200:
          description: OK
  /org/list:
    get:
      operationId: listOrg
      responses:
        200:
          description: OK
  /org/payment_method:
    get:
      operationId: listOrgPaymentMethods
      responses:
        200:
          description: OK
    post:
      operationId: saveOrgPaymentMethod
      responses:
        200:
          description: OK
  /org/payment_method/secret:
    get:
      operationId: getOrgStripeClientSecret
      responses:
        200:
          description: OK
  /org/payment_method/:id:
    delete:
      operationId: deleteOrgPaymentMethod
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /org/payment_method/:id/primary:
    post:
      operationId: setOrgPrimaryPaymentMethod
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
  /tag:
    get:
      operationId: listTags
      responses:
        200:
          description: OK
    post:
      operationId: saveTag
      responses:
        200:
          description: OK
  /tag/:id:
    delete:
      operationId: deleteTag
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /recurring:
    get:
      operationId: listRecurring
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
    post:
      operationId: saveRecurring
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /recurring/:id:
    get:
      operationId: getRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK     
  /resource:
    get:
      operationId: listPublishedResourcePages
      responses:
        200:
          description: OK
  /resource/:id:
    get:
      operationId: getPublishedResourcePage
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /manage/resource:
    get:
      operationId: listAllResourcePages
      responses:
        200:
          description: OK
    post:
      operationId: saveResourcePage
      responses:
        200:
          description: OK
  /manage/resource/:id:
    get:
      operationId: getEditResourcePage
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteResourcePage
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task_template:
    post:
      operationId: saveTaskTemplate
      # security:
      #   - authAdmin: []
      responses:
        200:
          description: OK
    get:
      operationId: listTaskTemplates
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /task_template/{id}:
    get:
      operationId: getTaskTemplate
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteTaskTemplate
      # security:
      #   - authAdmin: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task_template/{id}/clone:
    put:
      operationId: cloneTaskTemplate
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task_template/{id}/rename:
    post:
      operationId: renameTaskTemplate
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /doc_template:
    post:
      operationId: saveDocTemplate
      # security:
      #   - authAdmin: []
      responses:
        200:
          description: OK
    get:
      operationId: listDocTemplates
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /doc_template/{id}:
    get:
      operationId: getDocTemplate
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteDocTemplate
      # security:
      #   - authAdmin: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /doc_template/{id}/clone:
    put:
      operationId: cloneDocTemplate
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /doc_template/{id}/rename:
    post:
      operationId: renameDocTemplate
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task:
    put:
      operationId: createNewTask
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
    get:
      operationId: listMyTasks
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /task/tracking:
    get:
      operationId: listAllMyHistoricalTaskTrackings
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /task/deep/{deepLinkId}:
    get:
      operationId: getDeepLinkedTask
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: deepLinkId
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /task/search:
    post:
      operationId: searchTask
      # security:
      #   - authLoggedInUser: []
      responses:
        200:
          description: OK
  /task/{id}:
    get:
      operationId: getTask
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/status/{status}:
    post:
      operationId: changeTaskStatus
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
        - name: status
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /task/{id}/tags:
    post:
      operationId: updateTaskTags
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/rename:
    post:
      operationId: updateTaskName
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/log:
    get:
      operationId: getTaskLog
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/comment:
    get:
      operationId: listTaskComment
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    post:
      operationId: addTaskComment
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/content/sse:
    get:
      operationId: subscribeTaskContent
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/tracking/sse:
    get:
      operationId: subscribeTaskTracking
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/tracking/nudge:
    get:
      operationId: nudgeTrackingCursor
      parameters:
        - name: taskId
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/fields:
    post:
      operationId: updateTaskFields
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true        
      responses:
        200:
          description: OK      
  /task/{id}/field/value:
    post:
      operationId: saveTaskFieldValue
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true        
      responses:
        200:
          description: OK      
  /task/{taskId}/file:
    post:
      operationId: uploadTaskFile
      parameters:
        - name: taskId
          in: path
          type: string
          format: uuid
          required: true        
      responses:
        200:
          description: OK     
  /task/doc/{docId}:
    get:
      operationId: downloadTaskDoc
      parameters: 
        - name: docId
          in: path
          type: string
          format: uuid
          required: true              
      responses:
        200:
          description: OK       
    delete:
      operationId: deleteTaskDoc
      parameters: 
        - name: docId
          in: path
          type: string
          format: uuid
          required: true              
      responses:
        200:
          description: OK                     
  /task/doc/{docId}/request_sign:
    post:
      operationId: requestSignTaskDoc
      parameters:
        - name: docId
          in: path
          type: string
          format: uuid
          required: true                   
      responses:
        200:
          description: OK       
  /task/doc/{docId}/unrequest_sign:
    post:
      operationId: unrequestSignTaskDoc
      parameters:
        - name: docId
          in: path
          type: string
          format: uuid
          required: true                   
      responses:
        200:
          description: OK                       
  /task/{taskId}/doc_template:
    post:
      operationId: addDocTemplateToTask
      parameters:
        - name: taskId
          in: path
          type: string
          format: uuid
          required: true        
      responses:
        200:
          description: OK             
  /task/file/{fileId}:
    get:
      operationId: downloadTaskFile
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: fileId
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK           
  /task/file/{fileId}/sign:
    post:
      operationId: signTaskFile
      # security:
      #   - authLoggedInUser: []
      parameters:
        - name: fileId
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK              
  /task/field/{fieldId}/autodoc:
    post:
      operationId: generateAutoDoc
      parameters:
        - name: fieldId
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK                                          
  /task/{id}/assign:
    post:
      operationId: assignTask
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /task/{id}/notify:
    post:
      operationId: notifyTask
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK          
  /recurring:
    get:
      operationId: listRecurring
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
    post:
      operationId: saveRecurring
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /recurring/healthcheck:
    get:
      operationId: healthCheckRecurring
      responses:
        200:
          description: OK
  /recurring/:id:
    get:
      operationId: getRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /recurring/:id/run:
    post:
      operationId: runRecurring
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK          
  /tracking:
    post:
      operationId: listMessage
      # security:
      #   - authClient: []
      responses:
        200:
          description: OK
  /tracking/count/unread:
    get:
      operationId: getMessageUnreadCount
      responses:
        200:
          description: OK
  /tracking/:id:
    get:
      operationId: getMessage
      # security:
      #   - authClient: []
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /stats:
    get:
      operationId: getAdminStats
      responses:
        200:
          description: OK
  /blog/:
    get:
      operationId: listBlog
      responses:
        200:
          description: OK
    post:
      operationId: saveBlog
      responses:
        200:
          description: OK
  /blog/:id:
    get:
      operationId: getBlog
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
    delete:
      operationId: deleteBlog
      parameters:
        - name: id
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /email_template:
    get:
      operationId: listEmailTemplate
      responses:
        200:
          description: OK
  /email_template/:locale/:key:
    post:
      operationId: saveEmailTemplate
      parameters:
        - name: locale
          in: path
          type: string
          required: true
        - name: key
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /email_template/signature:
    get:
      operationId: getEmailTemplateSignature
      responses:
        200:
          description: OK
    post:
      operationId: saveEmailTemplateSignature
      responses:
        200:
          description: OK
  /config:
    get:
      operationId: listConfig
      responses:
        200:
          description: OK
    post:
      operationId: saveConfig
      responses:
        200:
          description: OK
  /subscription:
    get:
      operationId: listMyInvoices
      responses:
        200:
          description: OK        
  /subscription/resurge/:code:
    get:
      operationId: getOrgResurgingInfo
      parameters:
        - name: code
          in: path
          type: string
          format: uuid
          required: true      
      responses:
        200:
          description: OK          
    post:
      operationId: resurgeOrg
      parameters:
        - name: code
          in: path
          type: string
          format: uuid
          required: true      
      responses:
        200:
          description: OK                
  /subscription/period/current:
    get:
      operationId: getCurrentPeriod
      responses:
        200:
          description: OK  
  /subscription/period/:periodId/usage:
    get:
      operationId: getPeriodUsage
      parameters:
        - name: periodId
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK             
  /subscription/period/:periodId/:direction:
    get:
      operationId: getSiblingPeriod
      parameters:
        - name: periodId
          in: path
          type: string
          format: uuid
          required: true
        - name: direction
          in: path
          type: string
          required: true          
      responses:
        200:
          description: OK                        
             
  /subscription/invoice/:paymentId:
    get:
      operationId: downloadInvoice
      parameters:
        - name: paymentId
          in: path
          type: string
          format: uuid
          required: true
      responses:
        200:
          description: OK
  /promotion/:orgId:
    get:
      operationId: listPromotionCode
      parameters:
        - name: orgId
          in: path
          type: string
          format: uuid
          required: true      
      responses:
        200:
          description: OK
    put:
      operationId: newPromotionCode
      responses:
        200:
          description: OK     
  /promotion:
    post:
      operationId: savePromotion
      responses:
        200:
          description: OK

  /smart_search/task:
    post:
      operationId: smartSearchTask
      responses:
        200:
          description: OK
  /smart_search/task_template:
    post:
      operationId: smartSearchTaskTemplate
      responses:
        200:
          description: OK
  /smart_search/doc_template:
    post:
      operationId: smartSearchDocTemplate
      responses:
        200:
          description: OK
  /smart_search/client:
    post:
      operationId: smartSearchClient
      responses:
        200:
          description: OK
